name: Compare dependency package version
inputs:
  file:
    description: path to .csproj
    required: true
  package:
    description: package name
    required: true
  version:
    description: version in SemVer format
    required: true
  xpath:
    description: XPath to version element
    required: false
    default: '//ItemGroup/PackageReference[@Include="$1"]/@Version'
  regex:
    description: ECMAScript Regular Expression to parse the version string for verification
    required: false
    default: "^(?<major>0|[1-9]\\d*)\\.(?<minor>0|[1-9]\\d*)(\\.(?<patch>0|[1-9]\\d*))?(?:-(?<prerelease>(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?<buildmetadata>[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
outputs:
  result:
    description: Result of comparison, -1 -> given version is small than package version, 1 -> greater, 0 -> equal
    value: ${{ steps.cmp.outputs.result }}
runs:
  using: composite
  steps:
  - id: cmp
    name: Compare package ${{ inputs.package }} version to ${{ inputs.version }}
    shell: bash
    run: |-
      result=$(csproj-dependency-version cmp --version '${{ inputs.version }}' --package '${{ inputs.package }}' --xpath '${{ inputs.xpath }}' --regex '${{ inputs.regex }}' '${{ inputs.file }}')
      echo ${result}
      echo "result=${result}" >> $GITHUB_OUTPUT
