name: Get project package version
inputs:
  file:
    description: path to .csproj
    required: true
  package:
    description: package name
    required: true
  xpath:
    description: XPath to version element
    required: false
    default: '//ItemGroup/PackageReference[@Include="$1"]/@Version'
  regex:
    description: ECMAScript Regular Expression to parse the version string for verification
    required: false
    default: "^(?<major>0|[1-9]\\d*)\\.(?<minor>0|[1-9]\\d*)(\\.(?<patch>0|[1-9]\\d*))?(?:-(?<prerelease>(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?<buildmetadata>[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
outputs:
  version:
    description: version of inputs.package retrieved from inputs.file
    value: ${{ steps.get.outputs.version }}
runs:
  using: composite
  steps:
  - id: get
    name: Get package ${{ inputs.package }} version from ${{ inputs.file }}
    shell: bash
    run: |-
      version=$(csproj-dependency-version get --package '${{ inputs.package }}' --xpath '${{ inputs.xpath }}' --regex '${{ inputs.regex }}' '${{ inputs.file }}')
      echo ${version}
      echo "version=${version}" >> $GITHUB_OUTPUT
  - shell: bash
    run: |-
      echo ${{ steps.get.outputs.version }}
